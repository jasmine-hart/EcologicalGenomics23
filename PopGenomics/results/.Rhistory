_HiStOrY_V2_
install.packages(c("backports", "broom", "class", "cli", "cpp11", "crayon", "data.table", "DBI", "digest", "dtplyr", "fansi", "foreign", "fs", "generics", "glue", "graphlayouts", "hms", "htmltools", "igraph", "jsonlite", "knitr", "lifecycle", "lubridate", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "pillar", "Rcpp", "RcppArmadillo", "readr", "rlang", "rmarkdown", "rvest", "spatial", "stringi", "tibble", "tidyr", "tinytex", "tzdb", "uuid", "viridis", "vroom", "withr", "xfun", "xml2"))
install.packages(c("backports", "broom", "class", "cli", "cpp11", "crayon", "data.table", "DBI", "digest", "dtplyr", "fansi", "foreign", "fs", "generics", "glue", "graphlayouts", "hms", "htmltools", "igraph", "jsonlite", "knitr", "lifecycle", "lubridate", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "pillar", "Rcpp", "RcppArmadillo", "readr", "rlang", "rmarkdown", "rvest", "spatial", "stringi", "tibble", "tidyr", "tinytex", "tzdb", "uuid", "viridis", "vroom", "withr", "xfun", "xml2"))
install.packages(c("backports", "broom", "class", "cli", "cpp11", "crayon", "data.table", "DBI", "digest", "dtplyr", "fansi", "foreign", "fs", "generics", "glue", "graphlayouts", "hms", "htmltools", "igraph", "jsonlite", "knitr", "lifecycle", "lubridate", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "pillar", "Rcpp", "RcppArmadillo", "readr", "rlang", "rmarkdown", "rvest", "spatial", "stringi", "tibble", "tidyr", "tinytex", "tzdb", "uuid", "viridis", "vroom", "withr", "xfun", "xml2"))
install.packages(c("backports", "broom", "class", "cli", "cpp11", "crayon", "data.table", "DBI", "digest", "dtplyr", "fansi", "foreign", "fs", "generics", "glue", "graphlayouts", "hms", "htmltools", "igraph", "jsonlite", "knitr", "lifecycle", "lubridate", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "pillar", "Rcpp", "RcppArmadillo", "readr", "rlang", "rmarkdown", "rvest", "spatial", "stringi", "tibble", "tidyr", "tinytex", "tzdb", "uuid", "viridis", "vroom", "withr", "xfun", "xml2"))
install.packages(c("backports", "broom", "class", "cli", "cpp11", "crayon", "data.table", "DBI", "digest", "dtplyr", "fansi", "foreign", "fs", "generics", "glue", "graphlayouts", "hms", "htmltools", "igraph", "jsonlite", "knitr", "lifecycle", "lubridate", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "pillar", "Rcpp", "RcppArmadillo", "readr", "rlang", "rmarkdown", "rvest", "spatial", "stringi", "tibble", "tidyr", "tinytex", "tzdb", "uuid", "viridis", "vroom", "withr", "xfun", "xml2"))
install.packages(c("backports", "broom", "class", "cli", "cpp11", "crayon", "data.table", "DBI", "digest", "dtplyr", "fansi", "foreign", "fs", "generics", "glue", "graphlayouts", "hms", "htmltools", "igraph", "jsonlite", "knitr", "lifecycle", "lubridate", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "pillar", "Rcpp", "RcppArmadillo", "readr", "rlang", "rmarkdown", "rvest", "spatial", "stringi", "tibble", "tidyr", "tinytex", "tzdb", "uuid", "viridis", "vroom", "withr", "xfun", "xml2"))
install.packages(c("backports", "broom", "class", "cli", "cpp11", "crayon", "data.table", "DBI", "digest", "dtplyr", "fansi", "foreign", "fs", "generics", "glue", "graphlayouts", "hms", "htmltools", "igraph", "jsonlite", "knitr", "lifecycle", "lubridate", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "pillar", "Rcpp", "RcppArmadillo", "readr", "rlang", "rmarkdown", "rvest", "spatial", "stringi", "tibble", "tidyr", "tinytex", "tzdb", "uuid", "viridis", "vroom", "withr", "xfun", "xml2"))
install.packages(c("backports", "broom", "class", "cli", "cpp11", "crayon", "data.table", "DBI", "digest", "dtplyr", "fansi", "foreign", "fs", "generics", "glue", "graphlayouts", "hms", "htmltools", "igraph", "jsonlite", "knitr", "lifecycle", "lubridate", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "pillar", "Rcpp", "RcppArmadillo", "readr", "rlang", "rmarkdown", "rvest", "spatial", "stringi", "tibble", "tidyr", "tinytex", "tzdb", "uuid", "viridis", "vroom", "withr", "xfun", "xml2"))
install.packages(c("backports", "broom", "class", "cli", "cpp11", "crayon", "data.table", "DBI", "digest", "dtplyr", "fansi", "foreign", "fs", "generics", "glue", "graphlayouts", "hms", "htmltools", "igraph", "jsonlite", "knitr", "lifecycle", "lubridate", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "pillar", "Rcpp", "RcppArmadillo", "readr", "rlang", "rmarkdown", "rvest", "spatial", "stringi", "tibble", "tidyr", "tinytex", "tzdb", "uuid", "viridis", "vroom", "withr", "xfun", "xml2"))
install.packages(c("backports", "broom", "class", "cli", "cpp11", "crayon", "data.table", "DBI", "digest", "dtplyr", "fansi", "foreign", "fs", "generics", "glue", "graphlayouts", "hms", "htmltools", "igraph", "jsonlite", "knitr", "lifecycle", "lubridate", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "pillar", "Rcpp", "RcppArmadillo", "readr", "rlang", "rmarkdown", "rvest", "spatial", "stringi", "tibble", "tidyr", "tinytex", "tzdb", "uuid", "viridis", "vroom", "withr", "xfun", "xml2"))
install.packages(c("backports", "broom", "class", "cli", "cpp11", "crayon", "data.table", "DBI", "digest", "dtplyr", "fansi", "foreign", "fs", "generics", "glue", "graphlayouts", "hms", "htmltools", "igraph", "jsonlite", "knitr", "lifecycle", "lubridate", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "pillar", "Rcpp", "RcppArmadillo", "readr", "rlang", "rmarkdown", "rvest", "spatial", "stringi", "tibble", "tidyr", "tinytex", "tzdb", "uuid", "viridis", "vroom", "withr", "xfun", "xml2"))
install.packages(c("backports", "broom", "class", "cli", "cpp11", "crayon", "data.table", "DBI", "digest", "dtplyr", "fansi", "foreign", "fs", "generics", "glue", "graphlayouts", "hms", "htmltools", "igraph", "jsonlite", "knitr", "lifecycle", "lubridate", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "pillar", "Rcpp", "RcppArmadillo", "readr", "rlang", "rmarkdown", "rvest", "spatial", "stringi", "tibble", "tidyr", "tinytex", "tzdb", "uuid", "viridis", "vroom", "withr", "xfun", "xml2"))
install.packages(c("backports", "broom", "class", "cli", "cpp11", "crayon", "data.table", "DBI", "digest", "dtplyr", "fansi", "foreign", "fs", "generics", "glue", "graphlayouts", "hms", "htmltools", "igraph", "jsonlite", "knitr", "lifecycle", "lubridate", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "pillar", "Rcpp", "RcppArmadillo", "readr", "rlang", "rmarkdown", "rvest", "spatial", "stringi", "tibble", "tidyr", "tinytex", "tzdb", "uuid", "viridis", "vroom", "withr", "xfun", "xml2"))
install.packages('tinytex')
library(tinytex)
install.packages('patchwork')
library(tidyverse)
install.packages('tidyverse ')
install.packages('tidyverse')
install.packages("tidyverse")
install.packages("qtl")
library(readxl)
X_PRRFinalSelections_Map2023_Final <- read_excel("Documents/~$PRRFinalSelections+Map2023_Final.xlsx")
View(X_PRRFinalSelections_Map2023_Final)
library(readxl)
RDocument2023Pythium <- read_excel("Documents/Pythium2023/RDocument2023Pythium.xlsx")
View(RDocument2023Pythium)
library(tidyverse)
head(mydata)
rename(RDocument2023Pythium) -> mydata
head(mydata)
library(tidyverse)
library(ggplot2)
view(mydata)
rename("Disease Scores (1-9) (21-days)", data=mydata)
library("dyplr")
library(dpylr)
library("dpylr")
library(dbplyr)
commit
py1 <- mutate(mydata, meandis = rowMeans(select(mydata,9:17), na.rm=TRUE)))
py1 <- mutate(mydata, meandis = rowMeans(select(mydata,9:17), na.rm=TRUE))
py1 <- mutate(mydata, meandis = rowMeans(select(mydata,9:17), na.rm=FALSE))
py1
py1 <- mydata
py1 %>%
mutate(DMean = rowMeans(select(py1, "Disease Scores (1-9) (21 days)":17),na.rm=TRUE)))
py1 %>%
mutate(DMean = rowMeans(select(py1, "Disease Scores (1-9) (21 days)":17),na.rm=TRUE))
py1 %>%
mutate(DMean = rowMeans(select(py1, 9:17),na.rm=TRUE))
is_numeric(py1, 9)
is_numeric(py1, "Disease Scores (1-9) (21 days))
is_numeric(py1, "Disease Scores (1-9) (21 days)")
is_numeric(py1, "Disease Scores (1-9)(21 days)")
is_numeric(py1)
py2 <- coalesce(py1, 9:17)
py2 <- as.numeric(py1, 9:17)
py2 <- as.numeric(py1, 9)
py2 <- as.numeric(py1, "Disease Scores (1-9) (21 days)")
as.numeric(unlist(py1))
head(py1)
as.numeric(py1)
as.numeric(unlist(py1))
py2 <- as.numeric(unlist(py2))
py2
py2 <- as.numeric(unlist(py2))
py2 <- as.numeric(unlist(py1))
py2
head(py2)
py3 <- as.numeric(py1,"Disease Scores (1-9) (21 days)")
setwd("/Users/jasminehart/Documents/GitHub/EcologicalGenomics23/PopGenomics/results/")
list.files()
COV <- as.matrix(read.table("allRS_poly.cov")) # read in the genetic covariance matrix
PCA <- eigen(COV) # extract the principal components from the COV matrix
var <- round(PCA$values/sum(PCA$values),3)
var[1:3]
barplot(var,
xlab="Eigenvalues of the PCA",
ylab="Proportion of variance explained")
names <- read.table("allRS_bam.list")
names <- unlist(strsplit(basename(as.character(names[,1])), split = ".sorted.rmdup.bam"))
split = strsplit(names, "_")
pops <- data.frame(names[1:95], do.call(rbind, split[1:95]))
names(pops) = c("Ind", "Pop", "Row", "Col")
plot(PCA$vectors[,1:2],
col=as.factor(pops[,2]),
xlab="PC1",ylab="PC2",
main="Genetic PCA")
data=as.data.frame(PCA$vectors)
data=data[,c(1:3)]
data= cbind(data, pops)
cols=c("#377eB8","#EE9B00","#0A9396","#94D2BD","#FFCB69","#005f73","#E26D5C","#AE2012", "#6d597a", "#7EA16B","#d4e09b", "gray70")
ggscatter(data, x = "V1", y = "V2",
color = "Pop",
mean.point = TRUE,
star.plot = TRUE) +
theme_bw(base_size = 13, base_family = "Times") +
theme(panel.background = element_blank(),
legend.background = element_blank(),
panel.grid = element_blank(),
plot.background = element_blank(),
legend.text=element_text(size=rel(.7)),
axis.text = element_text(size=13),
legend.position = "bottom") +
labs(x = paste0("PC1: (",var[1]*100,"%)"), y = paste0("PC2: (",var[2]*100,"%)")) +
scale_color_manual(values=c(cols), name="Source population") +
guides(colour = guide_legend(nrow = 2))
library(ggplot2)
ggscatter(data, x = "V1", y = "V2",
color = "Pop",
mean.point = TRUE,
star.plot = TRUE) +
theme_bw(base_size = 13, base_family = "Times") +
theme(panel.background = element_blank(),
legend.background = element_blank(),
panel.grid = element_blank(),
plot.background = element_blank(),
legend.text=element_text(size=rel(.7)),
axis.text = element_text(size=13),
legend.position = "bottom") +
labs(x = paste0("PC1: (",var[1]*100,"%)"), y = paste0("PC2: (",var[2]*100,"%)")) +
scale_color_manual(values=c(cols), name="Source population") +
guides(colour = guide_legend(nrow = 2))
library(ggplot.multistats)
ggscatter(data, x = "V1", y = "V2",
color = "Pop",
mean.point = TRUE,
star.plot = TRUE) +
theme_bw(base_size = 13, base_family = "Times") +
theme(panel.background = element_blank(),
legend.background = element_blank(),
panel.grid = element_blank(),
plot.background = element_blank(),
legend.text=element_text(size=rel(.7)),
axis.text = element_text(size=13),
legend.position = "bottom") +
labs(x = paste0("PC1: (",var[1]*100,"%)"), y = paste0("PC2: (",var[2]*100,"%)")) +
scale_color_manual(values=c(cols), name="Source population") +
guides(colour = guide_legend(nrow = 2))
